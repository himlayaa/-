{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var fs = require('fs');\nvar Writable = require('readable-stream/writable');\n\nvar exists = function(path) {\n\ttry {\n\t\treturn fs.existsSync(path);\n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\nmodule.exports = function() {\n\tvar s = new Writable({highWaterMark:0});\n\n\tvar cb;\n\tvar data;\n\tvar tries = 0;\n\tvar offset = 0;\n\n\tvar write = function() {\n\t\tfs.write(1, data, offset, data.length - offset, null, onwrite);\n\t};\n\n\tvar onwrite = function(err, written) {\n\t\tif (err && err.code === 'EPIPE') return cb()\n\t\tif (err && err.code === 'EAGAIN' && tries++ < 30) return setTimeout(write, 10);\n\t\tif (err) return cb(err);\n\n\t\ttries = 0;\n\t\tif (offset + written >= data.length) return cb();\n\n\t\toffset += written;\n\t\twrite();\n\t};\n\n\ts._write = function(_data, enc, _cb) {\n\t\toffset = 0;\n\t\tcb = _cb;\n\t\tdata = _data;\n\t\twrite();\n\t};\n\n\ts._isStdio = true;\n\ts.isTTY = process.stdout.isTTY;\n\n\ts.on('finish', function() {\n\t\tfs.close(1, function(err) {\n\t\t\tif (err) s.emit('error', err);\n\t\t});\n\t});\n\n\treturn s;\n}();\n"]}